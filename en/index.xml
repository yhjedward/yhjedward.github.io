<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Hugo Zzo Theme</title>
    <link>https://yhjedward.github.io/en/</link>
    <description>Recent content on Hugo Zzo Theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>y3021454052@gmail.com (YHJ)</managingEditor>
    <webMaster>y3021454052@gmail.com (YHJ)</webMaster>
    <copyright>©2023, All Rights Reserved</copyright>
    <lastBuildDate>Wed, 22 Nov 2023 09:52:17 +0800</lastBuildDate>
    
        <atom:link href="https://yhjedward.github.io/en/index.xml" rel="self" type="application/rss+xml" />
    
      
      
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      

      
      <item>
        <title>组合和继承</title>
        <link>https://yhjedward.github.io/en/posts/java/%E7%BB%84%E5%90%88%E5%92%8C%E7%BB%A7%E6%89%BF/</link>
        <pubDate>Wed, 22 Nov 2023 09:52:17 +0800</pubDate>
        <author>y3021454052@gmail.com (YHJ)</author>
        <atom:modified>Wed, 22 Nov 2023 09:52:17 +0800</atom:modified>
        <guid>https://yhjedward.github.io/en/posts/java/%E7%BB%84%E5%90%88%E5%92%8C%E7%BB%A7%E6%89%BF/</guid>
        <description>概述 组合是显式的,继承是隐式的. 在类中博涵已有类的功能时,使用组合.</description>
        
        <dc:creator>YHJ</dc:creator>
        
        
        
        
        
          
            
              <category>Java</category>
            
          
        
        
      </item>
      
      <item>
        <title>接口</title>
        <link>https://yhjedward.github.io/en/posts/csharp/%E6%8E%A5%E5%8F%A3/</link>
        <pubDate>Sat, 18 Nov 2023 11:47:29 +0800</pubDate>
        <author>y3021454052@gmail.com (YHJ)</author>
        <atom:modified>Sat, 18 Nov 2023 11:47:29 +0800</atom:modified>
        <guid>https://yhjedward.github.io/en/posts/csharp/%E6%8E%A5%E5%8F%A3/</guid>
        <description>接口 概述 接口是指定一组函数成员而不实现它们的引用类型,只能使用类和结构来实现接口. 接口可以有访问修饰符,接口成员不能有访问修饰符. 接口实例 多</description>
        
        <dc:creator>YHJ</dc:creator>
        
        
        
        
        
          
            
              <category>csharp</category>
            
          
        
        
      </item>
      
      <item>
        <title>委托</title>
        <link>https://yhjedward.github.io/en/posts/csharp/%E5%A7%94%E6%89%98/</link>
        <pubDate>Sat, 18 Nov 2023 11:39:32 +0800</pubDate>
        <author>y3021454052@gmail.com (YHJ)</author>
        <atom:modified>Sat, 18 Nov 2023 11:39:32 +0800</atom:modified>
        <guid>https://yhjedward.github.io/en/posts/csharp/%E5%A7%94%E6%89%98/</guid>
        <description>委托 与 事件 概述 委托是引用类型, 委托有引用和对象, 委托类型必须在被用来创建变量以及类型的对象之前声明. 委托声明与方法声明相似, 只是没有实现块.</description>
        
        <dc:creator>YHJ</dc:creator>
        
        
        
        
        
          
            
              <category>csharp</category>
            
          
        
        
      </item>
      
      <item>
        <title>最小路径和</title>
        <link>https://yhjedward.github.io/en/posts/leetcode/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E5%92%8C/</link>
        <pubDate>Tue, 31 Oct 2023 11:21:08 +0800</pubDate>
        <author>y3021454052@gmail.com (YHJ)</author>
        <atom:modified>Tue, 31 Oct 2023 11:21:08 +0800</atom:modified>
        <guid>https://yhjedward.github.io/en/posts/leetcode/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E5%92%8C/</guid>
        <description>题目描述1 代码 c java python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 #include &amp;lt;iostream&amp;gt; #include &amp;lt;vector&amp;gt; using namespace</description>
        
        <dc:creator>YHJ</dc:creator>
        
        
        
        
          
            
              <category>动态规划</category>
            
          
        
        
          
            
              <category>题解</category>
            
          
        
        
      </item>
      
      <item>
        <title>二叉树的层序遍历</title>
        <link>https://yhjedward.github.io/en/posts/leetcode/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/</link>
        <pubDate>Tue, 24 Oct 2023 09:30:50 +0800</pubDate>
        <author>y3021454052@gmail.com (YHJ)</author>
        <atom:modified>Tue, 24 Oct 2023 09:30:50 +0800</atom:modified>
        <guid>https://yhjedward.github.io/en/posts/leetcode/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/</guid>
        <description>题目描述1 代码 c java python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60</description>
        
        <dc:creator>YHJ</dc:creator>
        
        
        
        
          
            
              <category>树</category>
            
          
            
              <category>广度优先搜索(BFS)</category>
            
          
        
        
          
            
              <category>题解</category>
            
          
        
        
      </item>
      
      <item>
        <title>跳跃游戏II</title>
        <link>https://yhjedward.github.io/en/posts/leetcode/%E8%B4%AA%E5%BF%83/%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8Fii/</link>
        <pubDate>Mon, 23 Oct 2023 10:37:15 +0800</pubDate>
        <author>y3021454052@gmail.com (YHJ)</author>
        <atom:modified>Mon, 23 Oct 2023 10:37:15 +0800</atom:modified>
        <guid>https://yhjedward.github.io/en/posts/leetcode/%E8%B4%AA%E5%BF%83/%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8Fii/</guid>
        <description>题目描述1 代码 c java python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 #include &amp;lt;iostream&amp;gt; #include &amp;lt;vector&amp;gt; using namespace std; class Solution { public: int jump(vector&amp;lt;int&amp;gt;&amp;amp; nums) { // 数组大小</description>
        
        <dc:creator>YHJ</dc:creator>
        
        
        
        
          
            
              <category>贪心法</category>
            
          
        
        
          
            
              <category>题解</category>
            
          
        
        
      </item>
      
      <item>
        <title>两两交换链表中的节点</title>
        <link>https://yhjedward.github.io/en/posts/leetcode/%E9%80%92%E5%BD%92/%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</link>
        <pubDate>Sat, 21 Oct 2023 10:31:00 +0800</pubDate>
        <author>y3021454052@gmail.com (YHJ)</author>
        <atom:modified>Sat, 21 Oct 2023 10:31:00 +0800</atom:modified>
        <guid>https://yhjedward.github.io/en/posts/leetcode/%E9%80%92%E5%BD%92/%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</guid>
        <description>题目描述1 代码 c java python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 #include &amp;lt;iostream&amp;gt; using namespace</description>
        
        <dc:creator>YHJ</dc:creator>
        
        
        
        
          
            
              <category>递归法</category>
            
          
            
              <category>链表</category>
            
          
        
        
          
            
              <category>题解</category>
            
          
        
        
      </item>
      
      <item>
        <title>括号生成</title>
        <link>https://yhjedward.github.io/en/posts/leetcode/%E5%9B%9E%E6%BA%AF%E6%B3%95/%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90/</link>
        <pubDate>Fri, 20 Oct 2023 17:58:22 +0800</pubDate>
        <author>y3021454052@gmail.com (YHJ)</author>
        <atom:modified>Fri, 20 Oct 2023 17:58:22 +0800</atom:modified>
        <guid>https://yhjedward.github.io/en/posts/leetcode/%E5%9B%9E%E6%BA%AF%E6%B3%95/%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90/</guid>
        <description>题目描述1 代码 c java python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 #include &amp;lt;iostream&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;vector&amp;gt; using namespace std; class Solution { public: void backtrack(vector&amp;lt;string&amp;gt;&amp;amp; ans, string&amp;amp; cur, int open,</description>
        
        <dc:creator>YHJ</dc:creator>
        
        
        
        
          
            
              <category>回溯法</category>
            
          
        
        
          
            
              <category>题解</category>
            
          
        
        
      </item>
      
      <item>
        <title>最长回文子串</title>
        <link>https://yhjedward.github.io/en/posts/leetcode/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</link>
        <pubDate>Thu, 12 Oct 2023 17:37:48 +0800</pubDate>
        <author>y3021454052@gmail.com (YHJ)</author>
        <atom:modified>Thu, 12 Oct 2023 17:37:48 +0800</atom:modified>
        <guid>https://yhjedward.github.io/en/posts/leetcode/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</guid>
        <description>题目描述1 代码 c java python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60</description>
        
        <dc:creator>YHJ</dc:creator>
        
        
        
        
          
            
              <category>动态规划</category>
            
          
        
        
          
            
              <category>题解</category>
            
          
        
        
      </item>
      
      <item>
        <title>Final关键字</title>
        <link>https://yhjedward.github.io/en/posts/java/final%E5%85%B3%E9%94%AE%E5%AD%97/</link>
        <pubDate>Fri, 15 Sep 2023 20:17:51 +0800</pubDate>
        <author>y3021454052@gmail.com (YHJ)</author>
        <atom:modified>Fri, 15 Sep 2023 20:17:51 +0800</atom:modified>
        <guid>https://yhjedward.github.io/en/posts/java/final%E5%85%B3%E9%94%AE%E5%AD%97/</guid>
        <description>final 数据 final 方法 final 类</description>
        
        <dc:creator>YHJ</dc:creator>
        
        
        
        
        
          
            
              <category>Java</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
